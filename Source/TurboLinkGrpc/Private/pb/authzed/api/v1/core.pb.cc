// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/core.proto

#include "pb/authzed/api/v1/core.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace authzed {
namespace api {
namespace v1 {
PROTOBUF_CONSTEXPR Relationship::Relationship(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.relation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.resource_)*/nullptr
  , /*decltype(_impl_.subject_)*/nullptr
  , /*decltype(_impl_.optional_caveat_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RelationshipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelationshipDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelationshipDefaultTypeInternal() {}
  union {
    Relationship _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelationshipDefaultTypeInternal _Relationship_default_instance_;
PROTOBUF_CONSTEXPR ContextualizedCaveat::ContextualizedCaveat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.caveat_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.context_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ContextualizedCaveatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContextualizedCaveatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContextualizedCaveatDefaultTypeInternal() {}
  union {
    ContextualizedCaveat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContextualizedCaveatDefaultTypeInternal _ContextualizedCaveat_default_instance_;
PROTOBUF_CONSTEXPR SubjectReference::SubjectReference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.optional_relation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.object_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubjectReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubjectReferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubjectReferenceDefaultTypeInternal() {}
  union {
    SubjectReference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubjectReferenceDefaultTypeInternal _SubjectReference_default_instance_;
PROTOBUF_CONSTEXPR ObjectReference::ObjectReference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.object_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.object_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectReferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectReferenceDefaultTypeInternal() {}
  union {
    ObjectReference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectReferenceDefaultTypeInternal _ObjectReference_default_instance_;
PROTOBUF_CONSTEXPR ZedToken::ZedToken(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ZedTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZedTokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZedTokenDefaultTypeInternal() {}
  union {
    ZedToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZedTokenDefaultTypeInternal _ZedToken_default_instance_;
PROTOBUF_CONSTEXPR RelationshipUpdate::RelationshipUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.relationship_)*/nullptr
  , /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RelationshipUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelationshipUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelationshipUpdateDefaultTypeInternal() {}
  union {
    RelationshipUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelationshipUpdateDefaultTypeInternal _RelationshipUpdate_default_instance_;
PROTOBUF_CONSTEXPR PermissionRelationshipTree::PermissionRelationshipTree(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.expanded_relation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expanded_object_)*/nullptr
  , /*decltype(_impl_.tree_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct PermissionRelationshipTreeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionRelationshipTreeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionRelationshipTreeDefaultTypeInternal() {}
  union {
    PermissionRelationshipTree _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionRelationshipTreeDefaultTypeInternal _PermissionRelationshipTree_default_instance_;
PROTOBUF_CONSTEXPR AlgebraicSubjectSet::AlgebraicSubjectSet(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.children_)*/{}
  , /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlgebraicSubjectSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlgebraicSubjectSetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlgebraicSubjectSetDefaultTypeInternal() {}
  union {
    AlgebraicSubjectSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlgebraicSubjectSetDefaultTypeInternal _AlgebraicSubjectSet_default_instance_;
PROTOBUF_CONSTEXPR DirectSubjectSet::DirectSubjectSet(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subjects_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DirectSubjectSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DirectSubjectSetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DirectSubjectSetDefaultTypeInternal() {}
  union {
    DirectSubjectSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DirectSubjectSetDefaultTypeInternal _DirectSubjectSet_default_instance_;
PROTOBUF_CONSTEXPR PartialCaveatInfo::PartialCaveatInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.missing_required_context_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PartialCaveatInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartialCaveatInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartialCaveatInfoDefaultTypeInternal() {}
  union {
    PartialCaveatInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartialCaveatInfoDefaultTypeInternal _PartialCaveatInfo_default_instance_;
}  // namespace v1
}  // namespace api
}  // namespace authzed
static ::_pb::Metadata file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[10];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_authzed_2fapi_2fv1_2fcore_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_authzed_2fapi_2fv1_2fcore_2eproto = nullptr;

const uint32_t TableStruct_authzed_2fapi_2fv1_2fcore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::Relationship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::Relationship, _impl_.resource_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::Relationship, _impl_.relation_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::Relationship, _impl_.subject_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::Relationship, _impl_.optional_caveat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ContextualizedCaveat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ContextualizedCaveat, _impl_.caveat_name_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ContextualizedCaveat, _impl_.context_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::SubjectReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::SubjectReference, _impl_.object_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::SubjectReference, _impl_.optional_relation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ObjectReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ObjectReference, _impl_.object_type_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ObjectReference, _impl_.object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ZedToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::ZedToken, _impl_.token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::RelationshipUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::RelationshipUpdate, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::RelationshipUpdate, _impl_.relationship_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PermissionRelationshipTree, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PermissionRelationshipTree, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PermissionRelationshipTree, _impl_.expanded_object_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PermissionRelationshipTree, _impl_.expanded_relation_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PermissionRelationshipTree, _impl_.tree_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::AlgebraicSubjectSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::AlgebraicSubjectSet, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::AlgebraicSubjectSet, _impl_.children_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::DirectSubjectSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::DirectSubjectSet, _impl_.subjects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PartialCaveatInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::PartialCaveatInfo, _impl_.missing_required_context_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::authzed::api::v1::Relationship)},
  { 10, -1, -1, sizeof(::authzed::api::v1::ContextualizedCaveat)},
  { 18, -1, -1, sizeof(::authzed::api::v1::SubjectReference)},
  { 26, -1, -1, sizeof(::authzed::api::v1::ObjectReference)},
  { 34, -1, -1, sizeof(::authzed::api::v1::ZedToken)},
  { 41, -1, -1, sizeof(::authzed::api::v1::RelationshipUpdate)},
  { 49, -1, -1, sizeof(::authzed::api::v1::PermissionRelationshipTree)},
  { 60, -1, -1, sizeof(::authzed::api::v1::AlgebraicSubjectSet)},
  { 68, -1, -1, sizeof(::authzed::api::v1::DirectSubjectSet)},
  { 75, -1, -1, sizeof(::authzed::api::v1::PartialCaveatInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::authzed::api::v1::_Relationship_default_instance_._instance,
  &::authzed::api::v1::_ContextualizedCaveat_default_instance_._instance,
  &::authzed::api::v1::_SubjectReference_default_instance_._instance,
  &::authzed::api::v1::_ObjectReference_default_instance_._instance,
  &::authzed::api::v1::_ZedToken_default_instance_._instance,
  &::authzed::api::v1::_RelationshipUpdate_default_instance_._instance,
  &::authzed::api::v1::_PermissionRelationshipTree_default_instance_._instance,
  &::authzed::api::v1::_AlgebraicSubjectSet_default_instance_._instance,
  &::authzed::api::v1::_DirectSubjectSet_default_instance_._instance,
  &::authzed::api::v1::_PartialCaveatInfo_default_instance_._instance,
};

const char descriptor_table_protodef_authzed_2fapi_2fv1_2fcore_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031authzed/api/v1/core.proto\022\016authzed.api"
  ".v1\032\034google/protobuf/struct.proto\032\027valid"
  "ate/validate.proto\"\271\002\n\014Relationship\022E\n\010r"
  "esource\030\001 \001(\0132\037.authzed.api.v1.ObjectRef"
  "erenceB\010\372B\005\212\001\002\020\001R\010resource\022C\n\010relation\030\002"
  " \001(\tB\'\372B$r\"(@2\036^[a-z][a-z0-9_]{1,62}[a-z"
  "0-9]$R\010relation\022D\n\007subject\030\003 \001(\0132 .authz"
  "ed.api.v1.SubjectReferenceB\010\372B\005\212\001\002\020\001R\007su"
  "bject\022W\n\017optional_caveat\030\004 \001(\0132$.authzed"
  ".api.v1.ContextualizedCaveatB\010\372B\005\212\001\002\020\000R\016"
  "optionalCaveat\"\246\001\n\024ContextualizedCaveat\022"
  "Q\n\013caveat_name\030\001 \001(\tB0\372B-r+(\200\0012&^([a-zA-"
  "Z0-9_][a-zA-Z0-9/_|-]{0,127})$R\ncaveatNa"
  "me\022;\n\007context\030\002 \001(\0132\027.google.protobuf.St"
  "ructB\010\372B\005\212\001\002\020\000R\007context\"\256\001\n\020SubjectRefer"
  "ence\022A\n\006object\030\001 \001(\0132\037.authzed.api.v1.Ob"
  "jectReferenceB\010\372B\005\212\001\002\020\001R\006object\022W\n\021optio"
  "nal_relation\030\002 \001(\tB*\372B\'r%(@2!^([a-z][a-z"
  "0-9_]{1,62}[a-z0-9])\?$R\020optionalRelation"
  "\"\320\001\n\017ObjectReference\022i\n\013object_type\030\001 \001("
  "\tBH\372BErC(\200\0012>^([a-z][a-z0-9_]{1,61}[a-z0"
  "-9]/)\?[a-z][a-z0-9_]{1,62}[a-z0-9]$R\nobj"
  "ectType\022R\n\tobject_id\030\002 \001(\tB5\372B2r0(\200\0012+^("
  "([a-zA-Z0-9_][a-zA-Z0-9/_|-]{0,127})|\\*)"
  "$R\010objectId\")\n\010ZedToken\022\035\n\005token\030\001 \001(\tB\007"
  "\372B\004r\002 \001R\005token\"\241\002\n\022RelationshipUpdate\022V\n"
  "\toperation\030\001 \001(\0162,.authzed.api.v1.Relati"
  "onshipUpdate.OperationB\n\372B\007\202\001\004\020\001 \000R\toper"
  "ation\022J\n\014relationship\030\002 \001(\0132\034.authzed.ap"
  "i.v1.RelationshipB\010\372B\005\212\001\002\020\001R\014relationshi"
  "p\"g\n\tOperation\022\031\n\025OPERATION_UNSPECIFIED\020"
  "\000\022\024\n\020OPERATION_CREATE\020\001\022\023\n\017OPERATION_TOU"
  "CH\020\002\022\024\n\020OPERATION_DELETE\020\003\"\250\002\n\032Permissio"
  "nRelationshipTree\022I\n\014intermediate\030\001 \001(\0132"
  "#.authzed.api.v1.AlgebraicSubjectSetH\000R\014"
  "intermediate\0226\n\004leaf\030\002 \001(\0132 .authzed.api"
  ".v1.DirectSubjectSetH\000R\004leaf\022H\n\017expanded"
  "_object\030\003 \001(\0132\037.authzed.api.v1.ObjectRef"
  "erenceR\016expandedObject\022+\n\021expanded_relat"
  "ion\030\004 \001(\tR\020expandedRelationB\020\n\ttree_type"
  "\022\003\370B\001\"\267\002\n\023AlgebraicSubjectSet\022W\n\toperati"
  "on\030\001 \001(\0162-.authzed.api.v1.AlgebraicSubje"
  "ctSet.OperationB\n\372B\007\202\001\004\020\001 \000R\toperation\022U"
  "\n\010children\030\002 \003(\0132*.authzed.api.v1.Permis"
  "sionRelationshipTreeB\r\372B\n\222\001\007\"\005\212\001\002\020\001R\010chi"
  "ldren\"p\n\tOperation\022\031\n\025OPERATION_UNSPECIF"
  "IED\020\000\022\023\n\017OPERATION_UNION\020\001\022\032\n\026OPERATION_"
  "INTERSECTION\020\002\022\027\n\023OPERATION_EXCLUSION\020\003\""
  "P\n\020DirectSubjectSet\022<\n\010subjects\030\001 \003(\0132 ."
  "authzed.api.v1.SubjectReferenceR\010subject"
  "s\"W\n\021PartialCaveatInfo\022B\n\030missing_requir"
  "ed_context\030\001 \003(\tB\010\372B\005\222\001\002\010\001R\026missingRequi"
  "redContextBH\n\022com.authzed.api.v1Z2github"
  ".com/authzed/authzed-go/proto/authzed/ap"
  "i/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_validate_2fvalidate_2eproto,
};
static ::_pbi::once_flag descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto = {
    false, false, 2172, descriptor_table_protodef_authzed_2fapi_2fv1_2fcore_2eproto,
    "authzed/api/v1/core.proto",
    &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once, descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_deps, 2, 10,
    schemas, file_default_instances, TableStruct_authzed_2fapi_2fv1_2fcore_2eproto::offsets,
    file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto, file_level_enum_descriptors_authzed_2fapi_2fv1_2fcore_2eproto,
    file_level_service_descriptors_authzed_2fapi_2fv1_2fcore_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter() {
  return &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_authzed_2fapi_2fv1_2fcore_2eproto(&descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto);
namespace authzed {
namespace api {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RelationshipUpdate_Operation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto);
  return file_level_enum_descriptors_authzed_2fapi_2fv1_2fcore_2eproto[0];
}
bool RelationshipUpdate_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr RelationshipUpdate_Operation RelationshipUpdate::OPERATION_UNSPECIFIED;
constexpr RelationshipUpdate_Operation RelationshipUpdate::OPERATION_CREATE;
constexpr RelationshipUpdate_Operation RelationshipUpdate::OPERATION_TOUCH;
constexpr RelationshipUpdate_Operation RelationshipUpdate::OPERATION_DELETE;
constexpr RelationshipUpdate_Operation RelationshipUpdate::Operation_MIN;
constexpr RelationshipUpdate_Operation RelationshipUpdate::Operation_MAX;
constexpr int RelationshipUpdate::Operation_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AlgebraicSubjectSet_Operation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto);
  return file_level_enum_descriptors_authzed_2fapi_2fv1_2fcore_2eproto[1];
}
bool AlgebraicSubjectSet_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr AlgebraicSubjectSet_Operation AlgebraicSubjectSet::OPERATION_UNSPECIFIED;
constexpr AlgebraicSubjectSet_Operation AlgebraicSubjectSet::OPERATION_UNION;
constexpr AlgebraicSubjectSet_Operation AlgebraicSubjectSet::OPERATION_INTERSECTION;
constexpr AlgebraicSubjectSet_Operation AlgebraicSubjectSet::OPERATION_EXCLUSION;
constexpr AlgebraicSubjectSet_Operation AlgebraicSubjectSet::Operation_MIN;
constexpr AlgebraicSubjectSet_Operation AlgebraicSubjectSet::Operation_MAX;
constexpr int AlgebraicSubjectSet::Operation_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Relationship::_Internal {
 public:
  static const ::authzed::api::v1::ObjectReference& resource(const Relationship* msg);
  static const ::authzed::api::v1::SubjectReference& subject(const Relationship* msg);
  static const ::authzed::api::v1::ContextualizedCaveat& optional_caveat(const Relationship* msg);
};

const ::authzed::api::v1::ObjectReference&
Relationship::_Internal::resource(const Relationship* msg) {
  return *msg->_impl_.resource_;
}
const ::authzed::api::v1::SubjectReference&
Relationship::_Internal::subject(const Relationship* msg) {
  return *msg->_impl_.subject_;
}
const ::authzed::api::v1::ContextualizedCaveat&
Relationship::_Internal::optional_caveat(const Relationship* msg) {
  return *msg->_impl_.optional_caveat_;
}
Relationship::Relationship(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.Relationship)
}
Relationship::Relationship(const Relationship& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Relationship* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.relation_){}
    , decltype(_impl_.resource_){nullptr}
    , decltype(_impl_.subject_){nullptr}
    , decltype(_impl_.optional_caveat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.relation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_relation().empty()) {
    _this->_impl_.relation_.Set(from._internal_relation(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_resource()) {
    _this->_impl_.resource_ = new ::authzed::api::v1::ObjectReference(*from._impl_.resource_);
  }
  if (from._internal_has_subject()) {
    _this->_impl_.subject_ = new ::authzed::api::v1::SubjectReference(*from._impl_.subject_);
  }
  if (from._internal_has_optional_caveat()) {
    _this->_impl_.optional_caveat_ = new ::authzed::api::v1::ContextualizedCaveat(*from._impl_.optional_caveat_);
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.Relationship)
}

inline void Relationship::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.relation_){}
    , decltype(_impl_.resource_){nullptr}
    , decltype(_impl_.subject_){nullptr}
    , decltype(_impl_.optional_caveat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.relation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Relationship::~Relationship() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.Relationship)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Relationship::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.relation_.Destroy();
  if (this != internal_default_instance()) delete _impl_.resource_;
  if (this != internal_default_instance()) delete _impl_.subject_;
  if (this != internal_default_instance()) delete _impl_.optional_caveat_;
}

void Relationship::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Relationship::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.Relationship)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relation_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.resource_ != nullptr) {
    delete _impl_.resource_;
  }
  _impl_.resource_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.subject_ != nullptr) {
    delete _impl_.subject_;
  }
  _impl_.subject_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.optional_caveat_ != nullptr) {
    delete _impl_.optional_caveat_;
  }
  _impl_.optional_caveat_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Relationship::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .authzed.api.v1.ObjectReference resource = 1 [json_name = "resource", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string relation = 2 [json_name = "relation", (.validate.rules) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_relation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.Relationship.relation"));
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.SubjectReference subject = 3 [json_name = "subject", (.validate.rules) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_subject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.ContextualizedCaveat optional_caveat = 4 [json_name = "optionalCaveat", (.validate.rules) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_optional_caveat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Relationship::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.Relationship)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .authzed.api.v1.ObjectReference resource = 1 [json_name = "resource", (.validate.rules) = {
  if (this->_internal_has_resource()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::resource(this),
        _Internal::resource(this).GetCachedSize(), target, stream);
  }

  // string relation = 2 [json_name = "relation", (.validate.rules) = {
  if (!this->_internal_relation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_relation().data(), static_cast<int>(this->_internal_relation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.Relationship.relation");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_relation(), target);
  }

  // .authzed.api.v1.SubjectReference subject = 3 [json_name = "subject", (.validate.rules) = {
  if (this->_internal_has_subject()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::subject(this),
        _Internal::subject(this).GetCachedSize(), target, stream);
  }

  // .authzed.api.v1.ContextualizedCaveat optional_caveat = 4 [json_name = "optionalCaveat", (.validate.rules) = {
  if (this->_internal_has_optional_caveat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::optional_caveat(this),
        _Internal::optional_caveat(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.Relationship)
  return target;
}

size_t Relationship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.Relationship)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string relation = 2 [json_name = "relation", (.validate.rules) = {
  if (!this->_internal_relation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_relation());
  }

  // .authzed.api.v1.ObjectReference resource = 1 [json_name = "resource", (.validate.rules) = {
  if (this->_internal_has_resource()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.resource_);
  }

  // .authzed.api.v1.SubjectReference subject = 3 [json_name = "subject", (.validate.rules) = {
  if (this->_internal_has_subject()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subject_);
  }

  // .authzed.api.v1.ContextualizedCaveat optional_caveat = 4 [json_name = "optionalCaveat", (.validate.rules) = {
  if (this->_internal_has_optional_caveat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.optional_caveat_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Relationship::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Relationship::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Relationship::GetClassData() const { return &_class_data_; }


void Relationship::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Relationship*>(&to_msg);
  auto& from = static_cast<const Relationship&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.Relationship)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_relation().empty()) {
    _this->_internal_set_relation(from._internal_relation());
  }
  if (from._internal_has_resource()) {
    _this->_internal_mutable_resource()->::authzed::api::v1::ObjectReference::MergeFrom(
        from._internal_resource());
  }
  if (from._internal_has_subject()) {
    _this->_internal_mutable_subject()->::authzed::api::v1::SubjectReference::MergeFrom(
        from._internal_subject());
  }
  if (from._internal_has_optional_caveat()) {
    _this->_internal_mutable_optional_caveat()->::authzed::api::v1::ContextualizedCaveat::MergeFrom(
        from._internal_optional_caveat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Relationship::CopyFrom(const Relationship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.Relationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relationship::IsInitialized() const {
  return true;
}

void Relationship::InternalSwap(Relationship* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.relation_, lhs_arena,
      &other->_impl_.relation_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Relationship, _impl_.optional_caveat_)
      + sizeof(Relationship::_impl_.optional_caveat_)
      - PROTOBUF_FIELD_OFFSET(Relationship, _impl_.resource_)>(
          reinterpret_cast<char*>(&_impl_.resource_),
          reinterpret_cast<char*>(&other->_impl_.resource_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Relationship::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[0]);
}

// ===================================================================

class ContextualizedCaveat::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& context(const ContextualizedCaveat* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ContextualizedCaveat::_Internal::context(const ContextualizedCaveat* msg) {
  return *msg->_impl_.context_;
}
void ContextualizedCaveat::clear_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
}
ContextualizedCaveat::ContextualizedCaveat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.ContextualizedCaveat)
}
ContextualizedCaveat::ContextualizedCaveat(const ContextualizedCaveat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ContextualizedCaveat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.caveat_name_){}
    , decltype(_impl_.context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.caveat_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.caveat_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_caveat_name().empty()) {
    _this->_impl_.caveat_name_.Set(from._internal_caveat_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.context_);
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.ContextualizedCaveat)
}

inline void ContextualizedCaveat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.caveat_name_){}
    , decltype(_impl_.context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.caveat_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.caveat_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ContextualizedCaveat::~ContextualizedCaveat() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.ContextualizedCaveat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ContextualizedCaveat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.caveat_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.context_;
}

void ContextualizedCaveat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ContextualizedCaveat::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.ContextualizedCaveat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.caveat_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContextualizedCaveat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string caveat_name = 1 [json_name = "caveatName", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_caveat_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.ContextualizedCaveat.caveat_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct context = 2 [json_name = "context", (.validate.rules) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ContextualizedCaveat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.ContextualizedCaveat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string caveat_name = 1 [json_name = "caveatName", (.validate.rules) = {
  if (!this->_internal_caveat_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_caveat_name().data(), static_cast<int>(this->_internal_caveat_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.ContextualizedCaveat.caveat_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_caveat_name(), target);
  }

  // .google.protobuf.Struct context = 2 [json_name = "context", (.validate.rules) = {
  if (this->_internal_has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.ContextualizedCaveat)
  return target;
}

size_t ContextualizedCaveat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.ContextualizedCaveat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string caveat_name = 1 [json_name = "caveatName", (.validate.rules) = {
  if (!this->_internal_caveat_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_caveat_name());
  }

  // .google.protobuf.Struct context = 2 [json_name = "context", (.validate.rules) = {
  if (this->_internal_has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ContextualizedCaveat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ContextualizedCaveat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ContextualizedCaveat::GetClassData() const { return &_class_data_; }


void ContextualizedCaveat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ContextualizedCaveat*>(&to_msg);
  auto& from = static_cast<const ContextualizedCaveat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.ContextualizedCaveat)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_caveat_name().empty()) {
    _this->_internal_set_caveat_name(from._internal_caveat_name());
  }
  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_context());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ContextualizedCaveat::CopyFrom(const ContextualizedCaveat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.ContextualizedCaveat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextualizedCaveat::IsInitialized() const {
  return true;
}

void ContextualizedCaveat::InternalSwap(ContextualizedCaveat* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.caveat_name_, lhs_arena,
      &other->_impl_.caveat_name_, rhs_arena
  );
  swap(_impl_.context_, other->_impl_.context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ContextualizedCaveat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[1]);
}

// ===================================================================

class SubjectReference::_Internal {
 public:
  static const ::authzed::api::v1::ObjectReference& object(const SubjectReference* msg);
};

const ::authzed::api::v1::ObjectReference&
SubjectReference::_Internal::object(const SubjectReference* msg) {
  return *msg->_impl_.object_;
}
SubjectReference::SubjectReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.SubjectReference)
}
SubjectReference::SubjectReference(const SubjectReference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubjectReference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.optional_relation_){}
    , decltype(_impl_.object_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.optional_relation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.optional_relation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_optional_relation().empty()) {
    _this->_impl_.optional_relation_.Set(from._internal_optional_relation(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_object()) {
    _this->_impl_.object_ = new ::authzed::api::v1::ObjectReference(*from._impl_.object_);
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.SubjectReference)
}

inline void SubjectReference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.optional_relation_){}
    , decltype(_impl_.object_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.optional_relation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.optional_relation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubjectReference::~SubjectReference() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.SubjectReference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubjectReference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.optional_relation_.Destroy();
  if (this != internal_default_instance()) delete _impl_.object_;
}

void SubjectReference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubjectReference::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.SubjectReference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.optional_relation_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.object_ != nullptr) {
    delete _impl_.object_;
  }
  _impl_.object_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubjectReference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .authzed.api.v1.ObjectReference object = 1 [json_name = "object", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string optional_relation = 2 [json_name = "optionalRelation", (.validate.rules) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_optional_relation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.SubjectReference.optional_relation"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubjectReference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.SubjectReference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .authzed.api.v1.ObjectReference object = 1 [json_name = "object", (.validate.rules) = {
  if (this->_internal_has_object()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::object(this),
        _Internal::object(this).GetCachedSize(), target, stream);
  }

  // string optional_relation = 2 [json_name = "optionalRelation", (.validate.rules) = {
  if (!this->_internal_optional_relation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_optional_relation().data(), static_cast<int>(this->_internal_optional_relation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.SubjectReference.optional_relation");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_optional_relation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.SubjectReference)
  return target;
}

size_t SubjectReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.SubjectReference)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string optional_relation = 2 [json_name = "optionalRelation", (.validate.rules) = {
  if (!this->_internal_optional_relation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_optional_relation());
  }

  // .authzed.api.v1.ObjectReference object = 1 [json_name = "object", (.validate.rules) = {
  if (this->_internal_has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.object_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubjectReference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubjectReference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubjectReference::GetClassData() const { return &_class_data_; }


void SubjectReference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubjectReference*>(&to_msg);
  auto& from = static_cast<const SubjectReference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.SubjectReference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_optional_relation().empty()) {
    _this->_internal_set_optional_relation(from._internal_optional_relation());
  }
  if (from._internal_has_object()) {
    _this->_internal_mutable_object()->::authzed::api::v1::ObjectReference::MergeFrom(
        from._internal_object());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubjectReference::CopyFrom(const SubjectReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.SubjectReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubjectReference::IsInitialized() const {
  return true;
}

void SubjectReference::InternalSwap(SubjectReference* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.optional_relation_, lhs_arena,
      &other->_impl_.optional_relation_, rhs_arena
  );
  swap(_impl_.object_, other->_impl_.object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubjectReference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[2]);
}

// ===================================================================

class ObjectReference::_Internal {
 public:
};

ObjectReference::ObjectReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.ObjectReference)
}
ObjectReference::ObjectReference(const ObjectReference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectReference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_type_){}
    , decltype(_impl_.object_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.object_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.object_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_object_type().empty()) {
    _this->_impl_.object_type_.Set(from._internal_object_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.object_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.object_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_object_id().empty()) {
    _this->_impl_.object_id_.Set(from._internal_object_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.ObjectReference)
}

inline void ObjectReference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.object_type_){}
    , decltype(_impl_.object_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.object_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.object_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.object_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.object_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectReference::~ObjectReference() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.ObjectReference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectReference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.object_type_.Destroy();
  _impl_.object_id_.Destroy();
}

void ObjectReference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectReference::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.ObjectReference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_type_.ClearToEmpty();
  _impl_.object_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectReference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string object_type = 1 [json_name = "objectType", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_object_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.ObjectReference.object_type"));
        } else
          goto handle_unusual;
        continue;
      // string object_id = 2 [json_name = "objectId", (.validate.rules) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_object_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.ObjectReference.object_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectReference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.ObjectReference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_type = 1 [json_name = "objectType", (.validate.rules) = {
  if (!this->_internal_object_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_object_type().data(), static_cast<int>(this->_internal_object_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.ObjectReference.object_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_object_type(), target);
  }

  // string object_id = 2 [json_name = "objectId", (.validate.rules) = {
  if (!this->_internal_object_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_object_id().data(), static_cast<int>(this->_internal_object_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.ObjectReference.object_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.ObjectReference)
  return target;
}

size_t ObjectReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.ObjectReference)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object_type = 1 [json_name = "objectType", (.validate.rules) = {
  if (!this->_internal_object_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_object_type());
  }

  // string object_id = 2 [json_name = "objectId", (.validate.rules) = {
  if (!this->_internal_object_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectReference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectReference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectReference::GetClassData() const { return &_class_data_; }


void ObjectReference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectReference*>(&to_msg);
  auto& from = static_cast<const ObjectReference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.ObjectReference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_object_type().empty()) {
    _this->_internal_set_object_type(from._internal_object_type());
  }
  if (!from._internal_object_id().empty()) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectReference::CopyFrom(const ObjectReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.ObjectReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectReference::IsInitialized() const {
  return true;
}

void ObjectReference::InternalSwap(ObjectReference* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.object_type_, lhs_arena,
      &other->_impl_.object_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.object_id_, lhs_arena,
      &other->_impl_.object_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectReference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[3]);
}

// ===================================================================

class ZedToken::_Internal {
 public:
};

ZedToken::ZedToken(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.ZedToken)
}
ZedToken::ZedToken(const ZedToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ZedToken* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.ZedToken)
}

inline void ZedToken::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ZedToken::~ZedToken() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.ZedToken)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ZedToken::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}

void ZedToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ZedToken::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.ZedToken)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ZedToken::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1 [json_name = "token", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.ZedToken.token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ZedToken::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.ZedToken)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1 [json_name = "token", (.validate.rules) = {
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.ZedToken.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.ZedToken)
  return target;
}

size_t ZedToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.ZedToken)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1 [json_name = "token", (.validate.rules) = {
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ZedToken::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ZedToken::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ZedToken::GetClassData() const { return &_class_data_; }


void ZedToken::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ZedToken*>(&to_msg);
  auto& from = static_cast<const ZedToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.ZedToken)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ZedToken::CopyFrom(const ZedToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.ZedToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZedToken::IsInitialized() const {
  return true;
}

void ZedToken::InternalSwap(ZedToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ZedToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[4]);
}

// ===================================================================

class RelationshipUpdate::_Internal {
 public:
  static const ::authzed::api::v1::Relationship& relationship(const RelationshipUpdate* msg);
};

const ::authzed::api::v1::Relationship&
RelationshipUpdate::_Internal::relationship(const RelationshipUpdate* msg) {
  return *msg->_impl_.relationship_;
}
RelationshipUpdate::RelationshipUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.RelationshipUpdate)
}
RelationshipUpdate::RelationshipUpdate(const RelationshipUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RelationshipUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.relationship_){nullptr}
    , decltype(_impl_.operation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_relationship()) {
    _this->_impl_.relationship_ = new ::authzed::api::v1::Relationship(*from._impl_.relationship_);
  }
  _this->_impl_.operation_ = from._impl_.operation_;
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.RelationshipUpdate)
}

inline void RelationshipUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.relationship_){nullptr}
    , decltype(_impl_.operation_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RelationshipUpdate::~RelationshipUpdate() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.RelationshipUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RelationshipUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.relationship_;
}

void RelationshipUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RelationshipUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.RelationshipUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.relationship_ != nullptr) {
    delete _impl_.relationship_;
  }
  _impl_.relationship_ = nullptr;
  _impl_.operation_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelationshipUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .authzed.api.v1.RelationshipUpdate.Operation operation = 1 [json_name = "operation", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operation(static_cast<::authzed::api::v1::RelationshipUpdate_Operation>(val));
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.Relationship relationship = 2 [json_name = "relationship", (.validate.rules) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_relationship(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RelationshipUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.RelationshipUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .authzed.api.v1.RelationshipUpdate.Operation operation = 1 [json_name = "operation", (.validate.rules) = {
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_operation(), target);
  }

  // .authzed.api.v1.Relationship relationship = 2 [json_name = "relationship", (.validate.rules) = {
  if (this->_internal_has_relationship()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::relationship(this),
        _Internal::relationship(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.RelationshipUpdate)
  return target;
}

size_t RelationshipUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.RelationshipUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .authzed.api.v1.Relationship relationship = 2 [json_name = "relationship", (.validate.rules) = {
  if (this->_internal_has_relationship()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.relationship_);
  }

  // .authzed.api.v1.RelationshipUpdate.Operation operation = 1 [json_name = "operation", (.validate.rules) = {
  if (this->_internal_operation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RelationshipUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RelationshipUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RelationshipUpdate::GetClassData() const { return &_class_data_; }


void RelationshipUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RelationshipUpdate*>(&to_msg);
  auto& from = static_cast<const RelationshipUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.RelationshipUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_relationship()) {
    _this->_internal_mutable_relationship()->::authzed::api::v1::Relationship::MergeFrom(
        from._internal_relationship());
  }
  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RelationshipUpdate::CopyFrom(const RelationshipUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.RelationshipUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelationshipUpdate::IsInitialized() const {
  return true;
}

void RelationshipUpdate::InternalSwap(RelationshipUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelationshipUpdate, _impl_.operation_)
      + sizeof(RelationshipUpdate::_impl_.operation_)
      - PROTOBUF_FIELD_OFFSET(RelationshipUpdate, _impl_.relationship_)>(
          reinterpret_cast<char*>(&_impl_.relationship_),
          reinterpret_cast<char*>(&other->_impl_.relationship_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RelationshipUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[5]);
}

// ===================================================================

class PermissionRelationshipTree::_Internal {
 public:
  static const ::authzed::api::v1::AlgebraicSubjectSet& intermediate(const PermissionRelationshipTree* msg);
  static const ::authzed::api::v1::DirectSubjectSet& leaf(const PermissionRelationshipTree* msg);
  static const ::authzed::api::v1::ObjectReference& expanded_object(const PermissionRelationshipTree* msg);
};

const ::authzed::api::v1::AlgebraicSubjectSet&
PermissionRelationshipTree::_Internal::intermediate(const PermissionRelationshipTree* msg) {
  return *msg->_impl_.tree_type_.intermediate_;
}
const ::authzed::api::v1::DirectSubjectSet&
PermissionRelationshipTree::_Internal::leaf(const PermissionRelationshipTree* msg) {
  return *msg->_impl_.tree_type_.leaf_;
}
const ::authzed::api::v1::ObjectReference&
PermissionRelationshipTree::_Internal::expanded_object(const PermissionRelationshipTree* msg) {
  return *msg->_impl_.expanded_object_;
}
void PermissionRelationshipTree::set_allocated_intermediate(::authzed::api::v1::AlgebraicSubjectSet* intermediate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_tree_type();
  if (intermediate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(intermediate);
    if (message_arena != submessage_arena) {
      intermediate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, intermediate, submessage_arena);
    }
    set_has_intermediate();
    _impl_.tree_type_.intermediate_ = intermediate;
  }
  // @@protoc_insertion_point(field_set_allocated:authzed.api.v1.PermissionRelationshipTree.intermediate)
}
void PermissionRelationshipTree::set_allocated_leaf(::authzed::api::v1::DirectSubjectSet* leaf) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_tree_type();
  if (leaf) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(leaf);
    if (message_arena != submessage_arena) {
      leaf = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, leaf, submessage_arena);
    }
    set_has_leaf();
    _impl_.tree_type_.leaf_ = leaf;
  }
  // @@protoc_insertion_point(field_set_allocated:authzed.api.v1.PermissionRelationshipTree.leaf)
}
PermissionRelationshipTree::PermissionRelationshipTree(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.PermissionRelationshipTree)
}
PermissionRelationshipTree::PermissionRelationshipTree(const PermissionRelationshipTree& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PermissionRelationshipTree* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.expanded_relation_){}
    , decltype(_impl_.expanded_object_){nullptr}
    , decltype(_impl_.tree_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.expanded_relation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.expanded_relation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expanded_relation().empty()) {
    _this->_impl_.expanded_relation_.Set(from._internal_expanded_relation(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_expanded_object()) {
    _this->_impl_.expanded_object_ = new ::authzed::api::v1::ObjectReference(*from._impl_.expanded_object_);
  }
  clear_has_tree_type();
  switch (from.tree_type_case()) {
    case kIntermediate: {
      _this->_internal_mutable_intermediate()->::authzed::api::v1::AlgebraicSubjectSet::MergeFrom(
          from._internal_intermediate());
      break;
    }
    case kLeaf: {
      _this->_internal_mutable_leaf()->::authzed::api::v1::DirectSubjectSet::MergeFrom(
          from._internal_leaf());
      break;
    }
    case TREE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.PermissionRelationshipTree)
}

inline void PermissionRelationshipTree::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.expanded_relation_){}
    , decltype(_impl_.expanded_object_){nullptr}
    , decltype(_impl_.tree_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.expanded_relation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.expanded_relation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_tree_type();
}

PermissionRelationshipTree::~PermissionRelationshipTree() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.PermissionRelationshipTree)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PermissionRelationshipTree::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.expanded_relation_.Destroy();
  if (this != internal_default_instance()) delete _impl_.expanded_object_;
  if (has_tree_type()) {
    clear_tree_type();
  }
}

void PermissionRelationshipTree::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PermissionRelationshipTree::clear_tree_type() {
// @@protoc_insertion_point(one_of_clear_start:authzed.api.v1.PermissionRelationshipTree)
  switch (tree_type_case()) {
    case kIntermediate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.tree_type_.intermediate_;
      }
      break;
    }
    case kLeaf: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.tree_type_.leaf_;
      }
      break;
    }
    case TREE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TREE_TYPE_NOT_SET;
}


void PermissionRelationshipTree::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.PermissionRelationshipTree)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.expanded_relation_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.expanded_object_ != nullptr) {
    delete _impl_.expanded_object_;
  }
  _impl_.expanded_object_ = nullptr;
  clear_tree_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PermissionRelationshipTree::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .authzed.api.v1.AlgebraicSubjectSet intermediate = 1 [json_name = "intermediate"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_intermediate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.DirectSubjectSet leaf = 2 [json_name = "leaf"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_leaf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.ObjectReference expanded_object = 3 [json_name = "expandedObject"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_expanded_object(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expanded_relation = 4 [json_name = "expandedRelation"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_expanded_relation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.PermissionRelationshipTree.expanded_relation"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PermissionRelationshipTree::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.PermissionRelationshipTree)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .authzed.api.v1.AlgebraicSubjectSet intermediate = 1 [json_name = "intermediate"];
  if (_internal_has_intermediate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::intermediate(this),
        _Internal::intermediate(this).GetCachedSize(), target, stream);
  }

  // .authzed.api.v1.DirectSubjectSet leaf = 2 [json_name = "leaf"];
  if (_internal_has_leaf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::leaf(this),
        _Internal::leaf(this).GetCachedSize(), target, stream);
  }

  // .authzed.api.v1.ObjectReference expanded_object = 3 [json_name = "expandedObject"];
  if (this->_internal_has_expanded_object()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::expanded_object(this),
        _Internal::expanded_object(this).GetCachedSize(), target, stream);
  }

  // string expanded_relation = 4 [json_name = "expandedRelation"];
  if (!this->_internal_expanded_relation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expanded_relation().data(), static_cast<int>(this->_internal_expanded_relation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.PermissionRelationshipTree.expanded_relation");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_expanded_relation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.PermissionRelationshipTree)
  return target;
}

size_t PermissionRelationshipTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.PermissionRelationshipTree)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string expanded_relation = 4 [json_name = "expandedRelation"];
  if (!this->_internal_expanded_relation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expanded_relation());
  }

  // .authzed.api.v1.ObjectReference expanded_object = 3 [json_name = "expandedObject"];
  if (this->_internal_has_expanded_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expanded_object_);
  }

  switch (tree_type_case()) {
    // .authzed.api.v1.AlgebraicSubjectSet intermediate = 1 [json_name = "intermediate"];
    case kIntermediate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tree_type_.intermediate_);
      break;
    }
    // .authzed.api.v1.DirectSubjectSet leaf = 2 [json_name = "leaf"];
    case kLeaf: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tree_type_.leaf_);
      break;
    }
    case TREE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PermissionRelationshipTree::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PermissionRelationshipTree::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PermissionRelationshipTree::GetClassData() const { return &_class_data_; }


void PermissionRelationshipTree::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PermissionRelationshipTree*>(&to_msg);
  auto& from = static_cast<const PermissionRelationshipTree&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.PermissionRelationshipTree)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_expanded_relation().empty()) {
    _this->_internal_set_expanded_relation(from._internal_expanded_relation());
  }
  if (from._internal_has_expanded_object()) {
    _this->_internal_mutable_expanded_object()->::authzed::api::v1::ObjectReference::MergeFrom(
        from._internal_expanded_object());
  }
  switch (from.tree_type_case()) {
    case kIntermediate: {
      _this->_internal_mutable_intermediate()->::authzed::api::v1::AlgebraicSubjectSet::MergeFrom(
          from._internal_intermediate());
      break;
    }
    case kLeaf: {
      _this->_internal_mutable_leaf()->::authzed::api::v1::DirectSubjectSet::MergeFrom(
          from._internal_leaf());
      break;
    }
    case TREE_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PermissionRelationshipTree::CopyFrom(const PermissionRelationshipTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.PermissionRelationshipTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionRelationshipTree::IsInitialized() const {
  return true;
}

void PermissionRelationshipTree::InternalSwap(PermissionRelationshipTree* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.expanded_relation_, lhs_arena,
      &other->_impl_.expanded_relation_, rhs_arena
  );
  swap(_impl_.expanded_object_, other->_impl_.expanded_object_);
  swap(_impl_.tree_type_, other->_impl_.tree_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PermissionRelationshipTree::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[6]);
}

// ===================================================================

class AlgebraicSubjectSet::_Internal {
 public:
};

AlgebraicSubjectSet::AlgebraicSubjectSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.AlgebraicSubjectSet)
}
AlgebraicSubjectSet::AlgebraicSubjectSet(const AlgebraicSubjectSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlgebraicSubjectSet* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.children_){from._impl_.children_}
    , decltype(_impl_.operation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.operation_ = from._impl_.operation_;
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.AlgebraicSubjectSet)
}

inline void AlgebraicSubjectSet::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.children_){arena}
    , decltype(_impl_.operation_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AlgebraicSubjectSet::~AlgebraicSubjectSet() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.AlgebraicSubjectSet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlgebraicSubjectSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.children_.~RepeatedPtrField();
}

void AlgebraicSubjectSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlgebraicSubjectSet::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.AlgebraicSubjectSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.children_.Clear();
  _impl_.operation_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlgebraicSubjectSet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .authzed.api.v1.AlgebraicSubjectSet.Operation operation = 1 [json_name = "operation", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operation(static_cast<::authzed::api::v1::AlgebraicSubjectSet_Operation>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .authzed.api.v1.PermissionRelationshipTree children = 2 [json_name = "children", (.validate.rules) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlgebraicSubjectSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.AlgebraicSubjectSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .authzed.api.v1.AlgebraicSubjectSet.Operation operation = 1 [json_name = "operation", (.validate.rules) = {
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_operation(), target);
  }

  // repeated .authzed.api.v1.PermissionRelationshipTree children = 2 [json_name = "children", (.validate.rules) = {
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_children_size()); i < n; i++) {
    const auto& repfield = this->_internal_children(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.AlgebraicSubjectSet)
  return target;
}

size_t AlgebraicSubjectSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.AlgebraicSubjectSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .authzed.api.v1.PermissionRelationshipTree children = 2 [json_name = "children", (.validate.rules) = {
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->_impl_.children_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .authzed.api.v1.AlgebraicSubjectSet.Operation operation = 1 [json_name = "operation", (.validate.rules) = {
  if (this->_internal_operation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlgebraicSubjectSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlgebraicSubjectSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlgebraicSubjectSet::GetClassData() const { return &_class_data_; }


void AlgebraicSubjectSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlgebraicSubjectSet*>(&to_msg);
  auto& from = static_cast<const AlgebraicSubjectSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.AlgebraicSubjectSet)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.children_.MergeFrom(from._impl_.children_);
  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlgebraicSubjectSet::CopyFrom(const AlgebraicSubjectSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.AlgebraicSubjectSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgebraicSubjectSet::IsInitialized() const {
  return true;
}

void AlgebraicSubjectSet::InternalSwap(AlgebraicSubjectSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.children_.InternalSwap(&other->_impl_.children_);
  swap(_impl_.operation_, other->_impl_.operation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AlgebraicSubjectSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[7]);
}

// ===================================================================

class DirectSubjectSet::_Internal {
 public:
};

DirectSubjectSet::DirectSubjectSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.DirectSubjectSet)
}
DirectSubjectSet::DirectSubjectSet(const DirectSubjectSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DirectSubjectSet* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subjects_){from._impl_.subjects_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.DirectSubjectSet)
}

inline void DirectSubjectSet::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.subjects_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DirectSubjectSet::~DirectSubjectSet() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.DirectSubjectSet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DirectSubjectSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subjects_.~RepeatedPtrField();
}

void DirectSubjectSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DirectSubjectSet::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.DirectSubjectSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subjects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DirectSubjectSet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .authzed.api.v1.SubjectReference subjects = 1 [json_name = "subjects"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subjects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DirectSubjectSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.DirectSubjectSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .authzed.api.v1.SubjectReference subjects = 1 [json_name = "subjects"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subjects_size()); i < n; i++) {
    const auto& repfield = this->_internal_subjects(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.DirectSubjectSet)
  return target;
}

size_t DirectSubjectSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.DirectSubjectSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .authzed.api.v1.SubjectReference subjects = 1 [json_name = "subjects"];
  total_size += 1UL * this->_internal_subjects_size();
  for (const auto& msg : this->_impl_.subjects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DirectSubjectSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DirectSubjectSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DirectSubjectSet::GetClassData() const { return &_class_data_; }


void DirectSubjectSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DirectSubjectSet*>(&to_msg);
  auto& from = static_cast<const DirectSubjectSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.DirectSubjectSet)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subjects_.MergeFrom(from._impl_.subjects_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DirectSubjectSet::CopyFrom(const DirectSubjectSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.DirectSubjectSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectSubjectSet::IsInitialized() const {
  return true;
}

void DirectSubjectSet::InternalSwap(DirectSubjectSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subjects_.InternalSwap(&other->_impl_.subjects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DirectSubjectSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[8]);
}

// ===================================================================

class PartialCaveatInfo::_Internal {
 public:
};

PartialCaveatInfo::PartialCaveatInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.PartialCaveatInfo)
}
PartialCaveatInfo::PartialCaveatInfo(const PartialCaveatInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PartialCaveatInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.missing_required_context_){from._impl_.missing_required_context_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.PartialCaveatInfo)
}

inline void PartialCaveatInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.missing_required_context_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PartialCaveatInfo::~PartialCaveatInfo() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.PartialCaveatInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PartialCaveatInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.missing_required_context_.~RepeatedPtrField();
}

void PartialCaveatInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PartialCaveatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.PartialCaveatInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.missing_required_context_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PartialCaveatInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string missing_required_context = 1 [json_name = "missingRequiredContext", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_missing_required_context();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.PartialCaveatInfo.missing_required_context"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PartialCaveatInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.PartialCaveatInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string missing_required_context = 1 [json_name = "missingRequiredContext", (.validate.rules) = {
  for (int i = 0, n = this->_internal_missing_required_context_size(); i < n; i++) {
    const auto& s = this->_internal_missing_required_context(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.PartialCaveatInfo.missing_required_context");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.PartialCaveatInfo)
  return target;
}

size_t PartialCaveatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.PartialCaveatInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string missing_required_context = 1 [json_name = "missingRequiredContext", (.validate.rules) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.missing_required_context_.size());
  for (int i = 0, n = _impl_.missing_required_context_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.missing_required_context_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PartialCaveatInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PartialCaveatInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PartialCaveatInfo::GetClassData() const { return &_class_data_; }


void PartialCaveatInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PartialCaveatInfo*>(&to_msg);
  auto& from = static_cast<const PartialCaveatInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.PartialCaveatInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.missing_required_context_.MergeFrom(from._impl_.missing_required_context_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PartialCaveatInfo::CopyFrom(const PartialCaveatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.PartialCaveatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartialCaveatInfo::IsInitialized() const {
  return true;
}

void PartialCaveatInfo::InternalSwap(PartialCaveatInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.missing_required_context_.InternalSwap(&other->_impl_.missing_required_context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PartialCaveatInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fcore_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api
}  // namespace authzed
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::authzed::api::v1::Relationship*
Arena::CreateMaybeMessage< ::authzed::api::v1::Relationship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::Relationship >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::ContextualizedCaveat*
Arena::CreateMaybeMessage< ::authzed::api::v1::ContextualizedCaveat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::ContextualizedCaveat >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::SubjectReference*
Arena::CreateMaybeMessage< ::authzed::api::v1::SubjectReference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::SubjectReference >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::ObjectReference*
Arena::CreateMaybeMessage< ::authzed::api::v1::ObjectReference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::ObjectReference >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::ZedToken*
Arena::CreateMaybeMessage< ::authzed::api::v1::ZedToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::ZedToken >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::RelationshipUpdate*
Arena::CreateMaybeMessage< ::authzed::api::v1::RelationshipUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::RelationshipUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::PermissionRelationshipTree*
Arena::CreateMaybeMessage< ::authzed::api::v1::PermissionRelationshipTree >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::PermissionRelationshipTree >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::AlgebraicSubjectSet*
Arena::CreateMaybeMessage< ::authzed::api::v1::AlgebraicSubjectSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::AlgebraicSubjectSet >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::DirectSubjectSet*
Arena::CreateMaybeMessage< ::authzed::api::v1::DirectSubjectSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::DirectSubjectSet >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::PartialCaveatInfo*
Arena::CreateMaybeMessage< ::authzed::api::v1::PartialCaveatInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::PartialCaveatInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
