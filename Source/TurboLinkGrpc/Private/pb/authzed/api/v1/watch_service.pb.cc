// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/watch_service.proto

#include "pb/authzed/api/v1/watch_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace authzed {
namespace api {
namespace v1 {
PROTOBUF_CONSTEXPR WatchRequest::WatchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.optional_object_types_)*/{}
  , /*decltype(_impl_.optional_start_cursor_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchRequestDefaultTypeInternal() {}
  union {
    WatchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchRequestDefaultTypeInternal _WatchRequest_default_instance_;
PROTOBUF_CONSTEXPR WatchResponse::WatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updates_)*/{}
  , /*decltype(_impl_.changes_through_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchResponseDefaultTypeInternal() {}
  union {
    WatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchResponseDefaultTypeInternal _WatchResponse_default_instance_;
}  // namespace v1
}  // namespace api
}  // namespace authzed
static ::_pb::Metadata file_level_metadata_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto = nullptr;

const uint32_t TableStruct_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::WatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::WatchRequest, _impl_.optional_object_types_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::WatchRequest, _impl_.optional_start_cursor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::WatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::WatchResponse, _impl_.updates_),
  PROTOBUF_FIELD_OFFSET(::authzed::api::v1::WatchResponse, _impl_.changes_through_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::authzed::api::v1::WatchRequest)},
  { 8, -1, -1, sizeof(::authzed::api::v1::WatchResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::authzed::api::v1::_WatchRequest_default_instance_._instance,
  &::authzed::api::v1::_WatchResponse_default_instance_._instance,
};

const char descriptor_table_protodef_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"authzed/api/v1/watch_service.proto\022\016au"
  "thzed.api.v1\032\034google/api/annotations.pro"
  "to\032\027validate/validate.proto\032\031authzed/api"
  "/v1/core.proto\"\342\001\n\014WatchRequest\022\203\001\n\025opti"
  "onal_object_types\030\001 \003(\tBO\372BL\222\001I\010\000\"ErC(\200\001"
  "2>^([a-z][a-z0-9_]{1,62}[a-z0-9]/)\?[a-z]"
  "[a-z0-9_]{1,62}[a-z0-9]$R\023optionalObject"
  "Types\022L\n\025optional_start_cursor\030\002 \001(\0132\030.a"
  "uthzed.api.v1.ZedTokenR\023optionalStartCur"
  "sor\"\220\001\n\rWatchResponse\022<\n\007updates\030\001 \003(\0132\""
  ".authzed.api.v1.RelationshipUpdateR\007upda"
  "tes\022A\n\017changes_through\030\002 \001(\0132\030.authzed.a"
  "pi.v1.ZedTokenR\016changesThrough2l\n\014WatchS"
  "ervice\022\\\n\005Watch\022\034.authzed.api.v1.WatchRe"
  "quest\032\035.authzed.api.v1.WatchResponse\"\024\202\323"
  "\344\223\002\016:\001*\"\t/v1/watch0\001BH\n\022com.authzed.api."
  "v1Z2github.com/authzed/authzed-go/proto/"
  "authzed/api/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_deps[3] = {
  &::descriptor_table_authzed_2fapi_2fv1_2fcore_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_validate_2fvalidate_2eproto,
};
static ::_pbi::once_flag descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto = {
    false, false, 702, descriptor_table_protodef_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto,
    "authzed/api/v1/watch_service.proto",
    &descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_once, descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_deps, 3, 2,
    schemas, file_default_instances, TableStruct_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto::offsets,
    file_level_metadata_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto, file_level_enum_descriptors_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto,
    file_level_service_descriptors_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_getter() {
  return &descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto(&descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto);
namespace authzed {
namespace api {
namespace v1 {

// ===================================================================

class WatchRequest::_Internal {
 public:
  static const ::authzed::api::v1::ZedToken& optional_start_cursor(const WatchRequest* msg);
};

const ::authzed::api::v1::ZedToken&
WatchRequest::_Internal::optional_start_cursor(const WatchRequest* msg) {
  return *msg->_impl_.optional_start_cursor_;
}
void WatchRequest::clear_optional_start_cursor() {
  if (GetArenaForAllocation() == nullptr && _impl_.optional_start_cursor_ != nullptr) {
    delete _impl_.optional_start_cursor_;
  }
  _impl_.optional_start_cursor_ = nullptr;
}
WatchRequest::WatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.WatchRequest)
}
WatchRequest::WatchRequest(const WatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WatchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.optional_object_types_){from._impl_.optional_object_types_}
    , decltype(_impl_.optional_start_cursor_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_optional_start_cursor()) {
    _this->_impl_.optional_start_cursor_ = new ::authzed::api::v1::ZedToken(*from._impl_.optional_start_cursor_);
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.WatchRequest)
}

inline void WatchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.optional_object_types_){arena}
    , decltype(_impl_.optional_start_cursor_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WatchRequest::~WatchRequest() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.WatchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.optional_object_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_start_cursor_;
}

void WatchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.WatchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.optional_object_types_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.optional_start_cursor_ != nullptr) {
    delete _impl_.optional_start_cursor_;
  }
  _impl_.optional_start_cursor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_optional_object_types();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "authzed.api.v1.WatchRequest.optional_object_types"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_optional_start_cursor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.WatchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = {
  for (int i = 0, n = this->_internal_optional_object_types_size(); i < n; i++) {
    const auto& s = this->_internal_optional_object_types(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authzed.api.v1.WatchRequest.optional_object_types");
    target = stream->WriteString(1, s, target);
  }

  // .authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];
  if (this->_internal_has_optional_start_cursor()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::optional_start_cursor(this),
        _Internal::optional_start_cursor(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.WatchRequest)
  return target;
}

size_t WatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.WatchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.optional_object_types_.size());
  for (int i = 0, n = _impl_.optional_object_types_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.optional_object_types_.Get(i));
  }

  // .authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];
  if (this->_internal_has_optional_start_cursor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.optional_start_cursor_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WatchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchRequest::GetClassData() const { return &_class_data_; }


void WatchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WatchRequest*>(&to_msg);
  auto& from = static_cast<const WatchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.WatchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.optional_object_types_.MergeFrom(from._impl_.optional_object_types_);
  if (from._internal_has_optional_start_cursor()) {
    _this->_internal_mutable_optional_start_cursor()->::authzed::api::v1::ZedToken::MergeFrom(
        from._internal_optional_start_cursor());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchRequest::CopyFrom(const WatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.WatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchRequest::IsInitialized() const {
  return true;
}

void WatchRequest::InternalSwap(WatchRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.optional_object_types_.InternalSwap(&other->_impl_.optional_object_types_);
  swap(_impl_.optional_start_cursor_, other->_impl_.optional_start_cursor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto[0]);
}

// ===================================================================

class WatchResponse::_Internal {
 public:
  static const ::authzed::api::v1::ZedToken& changes_through(const WatchResponse* msg);
};

const ::authzed::api::v1::ZedToken&
WatchResponse::_Internal::changes_through(const WatchResponse* msg) {
  return *msg->_impl_.changes_through_;
}
void WatchResponse::clear_updates() {
  _impl_.updates_.Clear();
}
void WatchResponse::clear_changes_through() {
  if (GetArenaForAllocation() == nullptr && _impl_.changes_through_ != nullptr) {
    delete _impl_.changes_through_;
  }
  _impl_.changes_through_ = nullptr;
}
WatchResponse::WatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:authzed.api.v1.WatchResponse)
}
WatchResponse::WatchResponse(const WatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updates_){from._impl_.updates_}
    , decltype(_impl_.changes_through_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_changes_through()) {
    _this->_impl_.changes_through_ = new ::authzed::api::v1::ZedToken(*from._impl_.changes_through_);
  }
  // @@protoc_insertion_point(copy_constructor:authzed.api.v1.WatchResponse)
}

inline void WatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updates_){arena}
    , decltype(_impl_.changes_through_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WatchResponse::~WatchResponse() {
  // @@protoc_insertion_point(destructor:authzed.api.v1.WatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updates_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.changes_through_;
}

void WatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:authzed.api.v1.WatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.changes_through_ != nullptr) {
    delete _impl_.changes_through_;
  }
  _impl_.changes_through_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .authzed.api.v1.RelationshipUpdate updates = 1 [json_name = "updates"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .authzed.api.v1.ZedToken changes_through = 2 [json_name = "changesThrough"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_changes_through(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authzed.api.v1.WatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .authzed.api.v1.RelationshipUpdate updates = 1 [json_name = "updates"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_updates_size()); i < n; i++) {
    const auto& repfield = this->_internal_updates(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .authzed.api.v1.ZedToken changes_through = 2 [json_name = "changesThrough"];
  if (this->_internal_has_changes_through()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::changes_through(this),
        _Internal::changes_through(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authzed.api.v1.WatchResponse)
  return target;
}

size_t WatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authzed.api.v1.WatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .authzed.api.v1.RelationshipUpdate updates = 1 [json_name = "updates"];
  total_size += 1UL * this->_internal_updates_size();
  for (const auto& msg : this->_impl_.updates_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .authzed.api.v1.ZedToken changes_through = 2 [json_name = "changesThrough"];
  if (this->_internal_has_changes_through()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.changes_through_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchResponse::GetClassData() const { return &_class_data_; }


void WatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WatchResponse*>(&to_msg);
  auto& from = static_cast<const WatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:authzed.api.v1.WatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updates_.MergeFrom(from._impl_.updates_);
  if (from._internal_has_changes_through()) {
    _this->_internal_mutable_changes_through()->::authzed::api::v1::ZedToken::MergeFrom(
        from._internal_changes_through());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchResponse::CopyFrom(const WatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authzed.api.v1.WatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchResponse::IsInitialized() const {
  return true;
}

void WatchResponse::InternalSwap(WatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
  swap(_impl_.changes_through_, other->_impl_.changes_through_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_getter, &descriptor_table_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto_once,
      file_level_metadata_authzed_2fapi_2fv1_2fwatch_5fservice_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api
}  // namespace authzed
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::authzed::api::v1::WatchRequest*
Arena::CreateMaybeMessage< ::authzed::api::v1::WatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::WatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::authzed::api::v1::WatchResponse*
Arena::CreateMaybeMessage< ::authzed::api::v1::WatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authzed::api::v1::WatchResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
